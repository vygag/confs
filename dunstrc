# See dunst(5) for all configuration options

[global]
### Display ###

    # На каком мониторе должны отображаться уведомления.
    monitor = 0

    # Отображение уведомления на сфокусированном мониторе. Возможными режимами являются:
    #   mouse: следуйте указателю мыши
    #   keyboard: следуйте за окном с фокусом клавиатуры
    #   none: ни за чем не следите
    #
    # "клавиатуре" нужен оконный менеджер, который экспортирует свойство _NET_ACTIVE_WINDOW.
    # 
    # Это должно иметь место почти для всех современных оконных менеджеров.
    #
    # Если для этого параметра задано значение мышь или клавиатура, параметр монитор будут проигнорированы.
    # 
    follow = keyboard

### Geometry ###

    # динамическая ширина от 0 до 300
    # width = (0, 300)
    # constant width of 300
    width = 550

    # Максимальная высота одного уведомления, исключая рамку.
    height = 450

    # Расположите уведомление в левом верхнем углу
    origin = top-left

    # Смещение от начала координат
    offset = 2x2

    # Масштабный коэффициент. Он автоматически определяется, если значение равно 0.
    scale = 0

    # Максимальное количество уведомлений (0 означает отсутствие ограничений)
    notification_limit = 0

### Progress bar Индикатор выполнения ###

    # Включите индикатор выполнения. Он появляется, когда передается подсказка о ходе выполнения с
    # например, dunstify -h int:value:12
    progress_bar = true

    # Установите высоту индикатора выполнения. Это включает в себя рамку, поэтому убедитесь, что
    # он как минимум в два раза больше ширины рамки.
    progress_bar_height = 10

    # Установите ширину рамки индикатора выполнения
    progress_bar_frame_width = 1

    # Установите минимальную ширину индикатора выполнения
    progress_bar_min_width = 150

    # Установите максимальную ширину индикатора выполнения
    progress_bar_max_width = 300

    # Показать, сколько сообщений в данный момент скрыто (из-за
    # notification_limit).
    indicate_hidden = yes

    # Прозрачность окна. Диапазон: [0; 100].
    # Этот параметр будет работать только в том случае, если диспетчер окон компоновки
    # установлен (e.g. xcompmgr, compiz, etc.). (X11 only)
    transparency = 0

    # Нарисуйте линию высотой пикселя "separator_height" между двумя уведомлениями.
    # 
    # Установите значение 0, чтобы отключить disable.
    # Если gap_size больше 0, этот параметр будет проигнорирован.
    separator_height = 2

    # Заполнение между текстом и разделителем.
    padding = 6

    # Горизонтальная прокладка.
    horizontal_padding = 6

    # Отступ между текстом и значком.
    text_icon_padding = 0

    # Определяет ширину рамки вокруг окна уведомления в пикселях.
    # Установите значение 0, чтобы отключить disable.
    frame_width = 3

    # Определяет цвет рамки вокруг окна уведомления.
    frame_color = "#ffffff"

    # Размер промежутка для отображения между уведомлениями - требуется compositor.
    # Если значение больше 0, separator_height будет проигнорирован, и вместо этого вокруг каждого уведомления будет нарисована 
    # граница размера frame_width.
    # События щелчка по пробелам в настоящее время не распространяются на приложения ниже.
    gap_size = 0

    # Определите цвет для разделителя.
    # возможными значениями являются:
    #  * auto: Данст пытается найти цвет, подходящий к фону;
    #  * foreground: используйте тот же цвет, что и на переднем плане;
    #  * frame: используйте тот же цвет, что и рамка;
    #  * все остальное будет интерпретироваться как цвет X color.
    separator_color = frame

    # Сортировка сообщений по срочности.
    sort = yes

    # Не удаляйте сообщения, если пользователь находится в режиме ожидания (без ввода с помощью мыши или клавиатуры) дольше, 
    # чем idle_threshold секунд.
    # Set to 0 to disable.
    # Клиент может установить подсказку 'transient', чтобы обойти это. Смотрите раздел правил, 
    # чтобы узнать, как отключить это при необходимости.
    # idle_threshold = 120

### Text ###

    font = Liberation mono 11

    # Интервал между строками. Если высота меньше высоты шрифта, она будет увеличена до высоты шрифта.
    line_height = 0

    # Возможными значениями являются:
    # full: Разрешить небольшое подмножество html-разметки в уведомлениях:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        Для получения полной справки см.
    #        <https://docs.gtk.org/Pango/pango_markup.html>.
    #
    # strip: Эта настройка предусмотрена для совместимости с некоторыми сломанными
    #        клиенты, которые отправляют разметку, даже если она не включена на server.
    #  
    # Данст попытается удалить разметку, но синтаксический анализ упрощен, поэтому использование этой опции вне правил 
    # сопоставления для конкретных приложений * СИЛЬНО НЕ РЕКОМЕНДУЕТСЯ *.     
    #        
    #
    # no:    Отключите синтаксический анализ разметки, входящие уведомления будут обрабатываться как
    #        обычный текст. Данст не будет рекламировать, что у него есть разметка тела
    #        возможность, если это задано как глобальная настройка.
    #
    # Важно отметить, что разметка внутри параметра format будет проанализирована
    # независимо от того, на что это настроено.
    markup = no

    # Формат сообщения.  Возможными переменными являются:
    #   %a  appname имя приложения
    #   %s  summary резюме
    #   %b  body тело
    #   %i  iconname (включая его путь)
    #   %I  iconname (без своего пути)
    #   %p  значение прогресса, если установлено ([  0%] до [100%]) или ничего
    #   %n  значение прогресса, если задано без каких-либо дополнительных символов
    #   %%  Literal %  Буквальный
    # Допускается разметка
    format = "<b>%s</b>\n%b"

    # Выравнивание текста сообщения.
    # Возможными значениями являются "left", "center" and "right".
    alignment = left

    # Выравнивание текста сообщения и значка по вертикали.
    # Возможными значениями являются "top", "center" and "bottom-дно".
    vertical_alignment = center

    # Показывать возраст сообщения, если сообщение старше, чем show_age_threshold секунд.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Укажите, где ставить многоточие в длинных строках.
    # Возможными значениями являются "начало", "середина" и "конец". "start", "middle" and "end".
    ellipsize = middle

    # Игнорировать новые строки '\n' в уведомлениях.
    ignore_newline = no

    # Объединяйте уведомления с одинаковым содержимым.
    stack_duplicates = true

    # Скрыть количество сложенных уведомлений с одинаковым содержимым
    hide_duplicate_count = false

    # Индикаторы отображения URL-адресов (U) и действий (A).
    show_indicators = no

### Icons ###

    # Рекурсивный поиск значков. Вы можете установить одну тему вместо того, чтобы
    # определите все пути поиска. true false
    enable_recursive_icon_lookup = false

    # Установить тему значка (используется только для рекурсивного поиска значка)
    # icon_theme = Adwaita
    # Вы также можете установить несколько тем значков, причем сначала будет использоваться крайняя левая.
    # icon_theme = "Adwaita, breeze"

    # Выровнять значки left/right/top/off
    icon_position = left

    # Масштабируйте маленькие значки до этого размера, установите значение 0, чтобы отключить. 
    # Полезно, например, для небольших файлов или экранов с высоким разрешением dpi.
    # В случае конфликта значение max_icon_size имеет приоритет над этим значением.
    # 
    min_icon_size = 3

    # Уменьшите масштаб больших значков до этого размера, установите значение 0, чтобы отключить.
    max_icon_size = 5

    # Пути к значкам по умолчанию (необходимы только в том случае, если не используется рекурсивный поиск значков)
    # icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

### History ###

    # Должно ли всплывающее уведомление из истории быть липким или с таймаутом, как если бы оно обычно выполнялось.
    sticky_history = yes

    # Максимальное количество уведомлений, сохраненных в истории.
    history_length = 20

    ### Misc/Advanced  Разное/Продвинутый ###

    # dmenu path.
    # dmenu = /usr/bin/dmenu -p dunst:

    # Браузер для открытия URL-адресов в контекстном меню.
    # browser = /usr/bin/xdg-open

    # Всегда запускайте сценарии, определенные правилами, даже если уведомление отключено.
    always_run_script = true

    # Определите название окон, созданных dunst.
    title = Dunst

    # Определите класс окон, созданных dunst.
    class = Dunst

    # Определите радиус угла окна уведомления в пикселях. Если радиус равен 0, у вас нет закругленных углов.
    # Радиус будет автоматически уменьшен, если он превысит половину высоты уведомления, чтобы избежать обрезки текста и или значков.
    corner_radius = 0

    # Игнорировать уведомление о закрытии dbus.
    # Полезно для обеспечения соблюдения тайм-аута, установленного конфигурацией dunst. 
    # Без этого параметра приложение может закрыть уведомление, отправленное до истечения установленного пользователем тайм-аута.
    ignore_dbusclose = false

### Wayland ###
    # Эти настройки специфичны для Wayland. Они не имеют никакого эффекта при использовании X11.

    # Раскомментируйте это, если вы хотите, чтобы уведомления отображались в полноэкранных приложениях (по умолчанию: наложение overlay).
    # 
    # layer = top

    # Установите для этого значение true, чтобы использовать вывод X11 на Wayland.
    # force_xwayland = false

### Legacy  Наследие ###

    # Используйте расширение Xinerama вместо RandR для поддержки нескольких мониторов.
    # Этот параметр предусмотрен для совместимости со старыми драйверами nVidia, которые не поддерживают RandR, 
    # и его использование в системах, поддерживающих RandR, крайне не рекомендуется.
    #
    # Включив этот параметр, dunst не сможет определить, подключен или отключен монитор, 
    # что может привести к нарушению режима слежения при изменении расположения экрана.
    force_xinerama = false

### mouse ###

    # Определяет список действий для каждого события мыши
    # Возможными значениями являются:
    # * none: Ничего не делай.
    # * do_action: Вызовите действие, определенное правилом action_name. Если такого действия нет, откройте контекстное меню.
    #              
    # * open_url: Если уведомление содержит только один URL-адрес, откройте его. Если их несколько, откройте контекстное меню.
    #            
    # * close_current: Закройте текущее уведомление.
    # * close_all: Закройте все уведомления.
    # * context: Откройте контекстное меню для уведомления.
    # * context_all: Откройте контекстное меню для всех уведомлений.
    # Эти значения могут быть объединены для каждого события мыши и будут выполняться последовательно.
    # 
    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all
    
### Экспериментальные функции ###

  # Экспериментальные функции, которые могут работать правильно, а могут и не работать. 
  # Не ожидайте, что они будут вести себя согласованно во всех выпусках.

[experimental]
    # Рассчитайте значение dpi для каждого монитора.
    # Если этот параметр включен, значение Xft.dpi будет проигнорировано, и вместо этого dunst попытается рассчитать 
    # соответствующее значение dpi для каждого монитора, используя разрешение и физический размер.
    # Это может быть полезно в настройках, где есть несколько экранов с очень разными значениями dpi.
   # per_monitor_dpi = false


[urgency_low]
    # ВАЖНО: цвета должны быть определены в кавычках.
    # В противном случае "#" и следующее за ним будут интерпретированы как комментарий.
    background = "#000000"
    foreground = "#ffffff"
    frame_color = "#ffffff"
    timeout = 15
    # Значок для уведомлений с низкой срочностью, раскомментируйте, чтобы включить.
    #default_icon = /path/to/icon

[urgency_normal]
    background = "#000000"
    foreground = "#4cf50a"
    frame_color = "#4cf50a"
    timeout = 10
    # Значок для уведомлений с обычной срочностью, раскомментируйте, чтобы включить.
    #default_icon = /path/to/icon

[urgency_critical]
    background = "#000000"
    foreground = "#fcf403"
    frame_color = "#fcf403"
    timeout = 0
    # Значок для уведомлений с критической срочностью, раскомментируйте, чтобы включить.
    #default_icon = /path/to/icon

# Каждый раздел, который не является одним из вышеперечисленных, интерпретируется как правила для переопределения настроек 
# для определенных сообщений.
# 
#
# Сообщения могут быть сопоставлены с помощью
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# и вы можете переопределить
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    icon_position
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#    hide_text
#
# Оболочечные шарики будут расширяться.
#
# Вместо фильтра имени приложения app name рекомендуется использовать фильтр desktop_entry.
# Приложения на основе GLib экспортируют свое имя записи на рабочем столе. По сравнению с именем приложения, 
# запись на рабочем столе не будет локализована.
# 
#
# SCRIPTING
# Вы можете указать сценарий, который запускается при совпадении с правилом, установив параметр "сценарий" script.
# 
# Сценарий будет вызван следующим образом:
#   
# имя приложения скрипта краткое содержание значка срочности, где срочность может быть 
# "НИЗКОЙ" "LOW", "НОРМАЛЬНОЙ" "NORMAL" или "КРИТИЧЕСКОЙ" "CRITICAL".
#
# ПРИМЕЧАНИЕ: Может быть полезно запустить dunst -print в терминале, чтобы найти подходящие варианты для правил.
# 

# Отключите временную подсказку, чтобы idle_threshold нельзя было обойти с клиента.
# 
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Сделайте обработку временных уведомлений более строгой, запретив их размещение в истории.
# 
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values  полноэкранные значения
# show: показывать уведомления независимо от того, открыто ли полноэкранное окно
# delay: отображает новое уведомление, если нет активного полноэкранного окна
#        Если уведомление уже нарисовано, оно не будет нарисовано.
# pushback: то же, что и задержка, но при переключении в полноэкранный режим уведомление снова исчезнет с экрана и будет отложено, 
# как новое уведомление.
#           
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # Это уведомление не будет отображаться
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # Это уведомление не будет сохранено в истории
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # Это уведомление не будет отображаться, но будет включено в историю
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg
